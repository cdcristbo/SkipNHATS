case = 2
)
return(returnBox)
returnBox
# Function to create a dataframe with variables and values based on skip patterns
patternData = patternDataBox[9,]
targetColumn="BOX HC3"
patternData
# Identify the column name ending with "dresid"
dresid_column <- grep("dresid$", names(data), value = TRUE)
# Extract integer value from the dresid_column
cond <- sub("dresid", "", dresid_column[1])
integer_value <- as.integer(sub("r", "", cond))
# Rename the column to "r" for consistency
data2 <- data %>%
rename(r = dresid_column[1]) %>%
filter(r!=4)
patternData$id_go > patternData$id_final
box <- data.frame(table(data2[[patternData$name_if]], data2[[patternData$name_go]]))
boxTable = box %>%
filter(Var1 == 2 & Freq > 0)
boxTable2 = box %>%
filter(Var2 == -1 & Freq > 0)
stringbox <- paste(boxTable$Var2, collapse = ",")
stringbox2 <- paste(boxTable2$Var1, collapse = ",")
returnBox <- data.frame(
variable = targetColumn,
boxVal = stringbox,
boxValminus = stringbox2,
name1 = patternData$name_if,
name2 = patternData$name_go,
name3 = patternData$name_final,
case = 2
)
returnBox
# Function to create a dataframe with variables and values based on skip patterns
patternData = patternDataBox[11,]
targetColumn="BOX HC3"
targetColumn="BOX HC17"
# Identify the column name ending with "dresid"
dresid_column <- grep("dresid$", names(data), value = TRUE)
# Extract integer value from the dresid_column
cond <- sub("dresid", "", dresid_column[1])
integer_value <- as.integer(sub("r", "", cond))
# Rename the column to "r" for consistency
data2 <- data %>%
rename(r = dresid_column[1]) %>%
filter(r!=4)
patternData$id_go > patternData$id_final
# Create a dataframe like box = data.frame(table(data$hc1fllsinmth, data$hc1faleninyr))
box <- data.frame(table(data2[[patternData$name_if]], data2[[patternData$name_final]]))
boxTable = box %>%
filter(Var1 == patternData$if_col2 & Freq > 0)
boxTable = box %>%
filter(Var1 == 1 & Freq > 0)
# Create a dataframe like box = data.frame(table(data$hc1fllsinmth, data$hc1faleninyr))
box <- data.frame(table(data2[[patternData$name_if]], data2[[patternData$name_final]]))
boxTable = box %>%
filter(Var1 == 1 & Freq > 0)
boxTable2 = box %>%
filter(Var2 == -1 & Freq > 0)
stringbox <- paste(boxTable$Var2, collapse = ",")
stringbox2 <- paste(boxTable2$Var1, collapse = ",")
returnBox <- data.frame(
variable = targetColumn,
boxVal = stringbox,
boxValminus = stringbox2,
name1 = patternData$name_if,
name2 = patternData$name_go,
name3 = patternData$name_final,
case =  1
)
return(returnBox)
returnBox
getBox <- function(data, patternData, targetColumn) {
# Identify the column name ending with "dresid"
dresid_column <- grep("dresid$", names(data), value = TRUE)
# Extract integer value from the dresid_column
cond <- sub("dresid", "", dresid_column[1])
integer_value <- as.integer(sub("r", "", cond))
# Rename the column to "r" for consistency
data2 <- data %>%
rename(r = dresid_column[1]) %>%
filter(r!=4)
# Extract relevant information from the patternData
if (patternData$id_go > patternData$id_final) {
# Create a dataframe like box = data.frame(table(data$hc1fllsinmth, data$hc1faleninyr))
box <- data.frame(table(data2[[patternData$name_if]], data2[[patternData$name_final]]))
boxTable = box %>%
filter(Var1 == 1 & Freq > 0)
boxTable2 = box %>%
filter(Var2 == -1 & Freq > 0)
stringbox <- paste(boxTable$Var2, collapse = ",")
stringbox2 <- paste(boxTable2$Var1, collapse = ",")
returnBox <- data.frame(
variable = targetColumn,
boxVal = stringbox,
boxValminus = stringbox2,
name1 = patternData$name_if,
name2 = patternData$name_go,
name3 = patternData$name_final,
case =  1
)
return(returnBox)
} else {
box <- data.frame(table(data2[[patternData$name_if]], data2[[patternData$name_go]]))
boxTable = box %>%
filter(Var1 == 2 & Freq > 0)
boxTable2 = box %>%
filter(Var2 == -1 & Freq > 0)
stringbox <- paste(boxTable$Var2, collapse = ",")
stringbox2 <- paste(boxTable2$Var1, collapse = ",")
returnBox <- data.frame(
variable = targetColumn,
boxVal = stringbox,
boxValminus = stringbox2,
name1 = patternData$name_if,
name2 = patternData$name_go,
name3 = patternData$name_final,
case = 2
)
return(returnBox)
}
}
getBox(data, patternData, targetColumn = "BOX HC17")
patternData
getBox(data, patternData, targetColumn = "BOX HC17")
# Function to create a dataframe with variables and values based on skip patterns
patternData = patternDataBox[10,]
targetColumn="BOX HC14"
getBox(data, patternData, targetColumn = "BOX HC14")
nrow(patternDataBox)
i=1
targetColumn = patternDataBox$Questionnaire.ITEM[i]
targetColumn
patternData2 = patternDataBox[i,]
patternData2
resultsbox <- getBox(data, patternData2, targetColumn)
results_box <- rbind(results_box, resultsbox )
results_box
i=2
targetColumn = patternDataBox$Questionnaire.ITEM[i]
patternData2 = patternDataBox[i,]
resultsbox <- getBox(data, patternData2, targetColumn)
results_box <- rbind(results_box, resultsbox )
results_box
i=3
targetColumn = patternDataBox$Questionnaire.ITEM[i]
patternData2 = patternDataBox[i,]
resultsbox <- getBox(data, patternData2, targetColumn)
results_box <- rbind(results_box, resultsbox )
results_box
for (i in 1:nrow(patternDataBox)) {
targetColumn = patternDataBox$Questionnaire.ITEM[i]
patternData2 = patternDataBox[i,]
resultsbox <- getBox(data, patternData2, targetColumn)
results_box <- rbind(results_box, resultsbox )
#print(resultsbox)
}
results_box
FinalPresentHC = patternData %>%
left_join(results_df %>%
rename(Variable.name = variable))  %>%
#select(-c(priorvariable,variable)) %>%
left_join(result_df %>%
mutate(firstskipPattern = paste0("hc1",label)) %>%
select(-label) %>%
rename(Variable.name = firstskipPattern)) %>%
mutate(skipPrior = gsub(",\\s*-1", "", skipPrior)) %>%
mutate(skippedResid = ifelse(OtherSkip2 == "1, 2",1,0),
skippedbyBoth = ifelse(
is.na(skipPrior) |
grepl("-8|-7|=(\\d+)", skipPrior) |
grepl("=(\\d+)", pattern),
0,
1
),
skippedbyBoth = ifelse(is.na(pattern),2,skippedbyBoth) ) %>%
mutate(Indicator2 = case_when(skippedResid==1 & skippedbyBoth==0 ~ 0,
skippedResid==1 & skippedbyBoth==1 ~ 1,
skippedResid==1 & skippedbyBoth==2 ~ 1,
skippedResid==0 & skippedbyBoth==1 ~ 1,
skippedResid==0 & skippedbyBoth==2 ~ 0,
skippedResid==0 & skippedbyBoth==0 ~ 0)  ) %>%
select(c("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponseID","pattern","OtherSkip2",
"indicatorByResIDValue","skipPrior","indicatorByResID","minus1Target",
"skippedResid","skippedbyBoth","Indicator2")) %>%
mutate(pattern = str_replace(pattern, "=\\d+$", ""),
pattern = ifelse(!is.na(skipPrior),paste0(pattern,"=",skipPrior),NA),
textResID = ifelse(!is.na(indicatorByResID),"resid=4",NA),
text = case_when(is.na(textResID) &  is.na(pattern) ~ NA,
is.na(textResID) &  !is.na(pattern) ~ pattern,
!is.na(textResID) &  is.na(pattern) ~ textResID,
!is.na(textResID) &  !is.na(pattern) ~ paste0(textResID," or ",pattern)
),
text = ifelse(is.na(text),"FileNotinSP",text)) %>%
select(-c(textResID,pattern)) %>%
ungroup() %>%
group_by(Questionnaire.ITEM) %>%
distinct() %>%
mutate(fldResponsesID = paste(fldResponseID, collapse = ",")) %>%
ungroup() %>%
select(-fldResponseID) %>%
distinct() %>%
select("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponsesID","OtherSkip2","indicatorByResIDValue","skipPrior","text") %>%
mutate(skipbyuniplicable = case_when(is.na(OtherSkip2) ~ NA,
OtherSkip2 == " " ~ 0,
!is.na(OtherSkip2) ~ 1),
skipbyResIDValue = case_when(indicatorByResIDValue=="-1"~1,
is.na(indicatorByResIDValue)~NA,
indicatorByResIDValue!="-1"~0),
skipbyResIDPattern = case_when( is.na(skipbyuniplicable) & is.na(skipPrior) ~ NA,
skipbyuniplicable==0 & !is.na(skipPrior)~0,
skipbyuniplicable==0 & is.na(skipPrior)~0,
skipbyuniplicable==1 & !is.na(skipPrior) ~0,
skipbyuniplicable==1 & is.na(skipPrior)~1)) %>%
select(-c("OtherSkip2","indicatorByResIDValue","skipPrior")) %>%
select("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponsesID",
"skipbyuniplicable","skipbyResIDValue","skipbyResIDPattern","text")
FinalPresentHC
library(readr)
library(dplyr)
library(openxlsx)
library(readxl)
library(openxlsx)
library(tidyverse)
# Set common base path
base_path <- "C:/Users/ccris/Dropbox (University of Michigan)/carlos/Work/Nhats/SkipNHATS/"
fullList <- read_excel(paste0(base_path, "datasets/SkipDataset/NHATSNationalStudyRound1SpecWriterExchange.xlsx"), sheet = "Item")
trueNames <- read_excel(paste0(base_path, "datasets/SkipDataset/NHATS_R1_Crosswalk_between_Instruments_and_Codebook_0.xlsx"))
Part2 <- read_excel(paste0(base_path, "datasets/SkipDataset/NHATSNationalStudyRound1SpecWriterExchange.xlsx"), sheet = "ItemResponse")
load(paste0(base_path, "outcomes/Rdresid.RData"))# result_df
load(paste0(base_path, "outcomes/SkipPattern.RData"))#results_df
processData <- paste0(base_path, "Functions/processData.R")
source(processData)
patternData = processData(Part2, fullList, trueNames)
datsRdresid = result_df %>%
mutate(firstskipPattern = paste0("hc1",label)) %>%
select(-label)
patternData2 = patternData %>%
filter(!is.na(pattern)&!is.na(Variable.name))
datsRdresid = result_df %>%
mutate(firstskipPattern = paste0("hc1",label)) %>%
select(-label)
FinalPresentHC = patternData %>%
left_join(results_df %>%
rename(Variable.name = variable))  %>%
#select(-c(priorvariable,variable)) %>%
left_join(result_df %>%
mutate(firstskipPattern = paste0("hc1",label)) %>%
select(-label) %>%
rename(Variable.name = firstskipPattern)) %>%
mutate(skipPrior = gsub(",\\s*-1", "", skipPrior)) %>%
mutate(skippedResid = ifelse(OtherSkip2 == "1, 2",1,0),
skippedbyBoth = ifelse(
is.na(skipPrior) |
grepl("-8|-7|=(\\d+)", skipPrior) |
grepl("=(\\d+)", pattern),
0,
1
),
skippedbyBoth = ifelse(is.na(pattern),2,skippedbyBoth) ) %>%
mutate(Indicator2 = case_when(skippedResid==1 & skippedbyBoth==0 ~ 0,
skippedResid==1 & skippedbyBoth==1 ~ 1,
skippedResid==1 & skippedbyBoth==2 ~ 1,
skippedResid==0 & skippedbyBoth==1 ~ 1,
skippedResid==0 & skippedbyBoth==2 ~ 0,
skippedResid==0 & skippedbyBoth==0 ~ 0)  ) %>%
select(c("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponseID","pattern","OtherSkip2",
"indicatorByResIDValue","skipPrior","indicatorByResID","minus1Target",
"skippedResid","skippedbyBoth","Indicator2")) %>%
mutate(pattern = str_replace(pattern, "=\\d+$", ""),
pattern = ifelse(!is.na(skipPrior),paste0(pattern,"=",skipPrior),NA),
textResID = ifelse(!is.na(indicatorByResID),"resid=4",NA),
text = case_when(is.na(textResID) &  is.na(pattern) ~ NA,
is.na(textResID) &  !is.na(pattern) ~ pattern,
!is.na(textResID) &  is.na(pattern) ~ textResID,
!is.na(textResID) &  !is.na(pattern) ~ paste0(textResID," or ",pattern)
),
text = ifelse(is.na(text),"FileNotinSP",text)) %>%
select(-c(textResID,pattern)) %>%
ungroup() %>%
group_by(Questionnaire.ITEM) %>%
distinct() %>%
mutate(fldResponsesID = paste(fldResponseID, collapse = ",")) %>%
ungroup() %>%
select(-fldResponseID) %>%
distinct() %>%
select("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponsesID","OtherSkip2","indicatorByResIDValue","skipPrior","text") %>%
mutate(skipbyuniplicable = case_when(is.na(OtherSkip2) ~ NA,
OtherSkip2 == " " ~ 0,
!is.na(OtherSkip2) ~ 1),
skipbyResIDValue = case_when(indicatorByResIDValue=="-1"~1,
is.na(indicatorByResIDValue)~NA,
indicatorByResIDValue!="-1"~0),
skipbyResIDPattern = case_when( is.na(skipbyuniplicable) & is.na(skipPrior) ~ NA,
skipbyuniplicable==0 & !is.na(skipPrior)~0,
skipbyuniplicable==0 & is.na(skipPrior)~0,
skipbyuniplicable==1 & !is.na(skipPrior) ~0,
skipbyuniplicable==1 & is.na(skipPrior)~1)) %>%
select(-c("OtherSkip2","indicatorByResIDValue","skipPrior")) %>%
select("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponsesID",
"skipbyuniplicable","skipbyResIDValue","skipbyResIDPattern","text")
FinalPresentHC = patternData %>%
left_join(results_df %>%
rename(Variable.name = variable))  %>%
#select(-c(priorvariable,variable)) %>%
left_join(result_df %>%
mutate(firstskipPattern = paste0("hc1",label)) %>%
select(-label) %>%
rename(Variable.name = firstskipPattern)) %>%
mutate(skipPrior = gsub(",\\s*-1", "", skipPrior)) %>%
mutate(skippedResid = ifelse(OtherSkip2 == "1, 2",1,0),
skippedbyBoth = ifelse(
is.na(skipPrior) |
grepl("-8|-7|=(\\d+)", skipPrior) |
grepl("=(\\d+)", pattern),
0,
1
),
skippedbyBoth = ifelse(is.na(pattern),2,skippedbyBoth) ) %>%
mutate(Indicator2 = case_when(skippedResid==1 & skippedbyBoth==0 ~ 0,
skippedResid==1 & skippedbyBoth==1 ~ 1,
skippedResid==1 & skippedbyBoth==2 ~ 1,
skippedResid==0 & skippedbyBoth==1 ~ 1,
skippedResid==0 & skippedbyBoth==2 ~ 0,
skippedResid==0 & skippedbyBoth==0 ~ 0)  ) %>%
select(c("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponseID","pattern","OtherSkip2",
"indicatorByResIDValue","skipPrior","indicatorByResID","minus1Target",
"skippedResid","skippedbyBoth","Indicator2")) %>%
mutate(pattern = str_replace(pattern, "=\\d+$", ""),
pattern = ifelse(!is.na(skipPrior),paste0(pattern,"=",skipPrior),NA),
textResID = ifelse(!is.na(indicatorByResID),"resid=4",NA),
text = case_when(is.na(textResID) &  is.na(pattern) ~ NA,
is.na(textResID) &  !is.na(pattern) ~ pattern,
!is.na(textResID) &  is.na(pattern) ~ textResID,
!is.na(textResID) &  !is.na(pattern) ~ paste0(textResID," or ",pattern)
),
text = ifelse(is.na(text),"FileNotinSP",text)) %>%
select(-c(textResID,pattern)) %>%
ungroup() %>%
group_by(Questionnaire.ITEM) %>%
distinct() %>%
mutate(fldResponsesID = paste(fldResponseID, collapse = ",")) %>%
ungroup() %>%
select(-fldResponseID) %>%
distinct() %>%
select("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponsesID","OtherSkip2","indicatorByResIDValue","skipPrior","text") %>%
mutate(skipbyuniplicable = case_when(is.na(OtherSkip2) ~ NA,
OtherSkip2 == " " ~ 0,
!is.na(OtherSkip2) ~ 1),
skipbyResIDValue = case_when(indicatorByResIDValue=="-1"~1,
is.na(indicatorByResIDValue)~NA,
indicatorByResIDValue!="-1"~0),
skipbyResIDPattern = case_when( is.na(skipbyuniplicable) & is.na(skipPrior) ~ NA,
skipbyuniplicable==0 & !is.na(skipPrior)~0,
skipbyuniplicable==0 & is.na(skipPrior)~0,
skipbyuniplicable==1 & !is.na(skipPrior) ~0,
skipbyuniplicable==1 & is.na(skipPrior)~1)) %>%
select(-c("OtherSkip2","indicatorByResIDValue","skipPrior")) %>%
select("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponsesID",
"skipbyuniplicable","skipbyResIDValue","skipbyResIDPattern","text") %>%
rename(indicatorByResID = "skipbyuniplicable",
skipbyResID = "skipbyResIDValue",
skipbyResIDPattern = "skipbyResIDPattern")
write.csv(FinalPresentHC,file = paste0(base_path, "outcomes/BaseWoCleanv02.csv"))
results_box
patternDataBox[10,]
getBox <- function(data, patternData, targetColumn) {
# Identify the column name ending with "dresid"
dresid_column <- grep("dresid$", names(data), value = TRUE)
# Extract integer value from the dresid_column
cond <- sub("dresid", "", dresid_column[1])
integer_value <- as.integer(sub("r", "", cond))
# Rename the column to "r" for consistency
data2 <- data %>%
rename(r = dresid_column[1]) %>%
filter(r!=4)
# Extract relevant information from the patternData
if (patternData$id_go > patternData$id_final) {
# Create a dataframe like box = data.frame(table(data$hc1fllsinmth, data$hc1faleninyr))
box <- data.frame(table(data2[[patternData$name_if]], data2[[patternData$name_final]]))
boxTable = box %>%
filter(Var1 == 1 & Freq > 0)
boxTable2 = box %>%
filter(Var2 == -1 & Freq > 0)
stringbox <- paste(boxTable$Var2, collapse = ",")
stringbox2 <- paste(boxTable2$Var1, collapse = ",")
returnBox <- data.frame(
variable = targetColumn,
boxVal = stringbox,
boxValminus = stringbox2,
name1 = patternData$if_col,
name2 = patternData$go_col,
name3 = patternData$final_col,
case =  1
)
return(returnBox)
} else {
box <- data.frame(table(data2[[patternData$name_if]], data2[[patternData$name_go]]))
boxTable = box %>%
filter(Var1 == 2 & Freq > 0)
boxTable2 = box %>%
filter(Var2 == -1 & Freq > 0)
stringbox <- paste(boxTable$Var2, collapse = ",")
stringbox2 <- paste(boxTable2$Var1, collapse = ",")
returnBox <- data.frame(
variable = targetColumn,
boxVal = stringbox,
boxValminus = stringbox2,
name1 = patternData$if_col,
name2 = patternData$go_col,
name3 = patternData$final_col,
case = 2
)
return(returnBox)
}
}
for (i in 1:nrow(patternDataBox)) {
targetColumn = patternDataBox$Questionnaire.ITEM[i]
patternData2 = patternDataBox[i,]
resultsbox <- getBox(data, patternData2, targetColumn)
results_box <- rbind(results_box, resultsbox )
#print(resultsbox)
}
results_box
View(results_box)
results_box = NULL
for (i in 1:nrow(patternDataBox)) {
targetColumn = patternDataBox$Questionnaire.ITEM[i]
patternData2 = patternDataBox[i,]
resultsbox <- getBox(data, patternData2, targetColumn)
results_box <- rbind(results_box, resultsbox )
#print(resultsbox)
}
results_box
write.csv(results_box,file = paste0(base_path, "outcomes/Boxes.csv"))
FinalPresentHC = patternData %>%
left_join(results_df %>%
rename(Variable.name = variable))  %>%
#select(-c(priorvariable,variable)) %>%
left_join(result_df %>%
mutate(firstskipPattern = paste0("hc1",label)) %>%
select(-label) %>%
rename(Variable.name = firstskipPattern)) %>%
mutate(skipPrior = gsub(",\\s*-1", "", skipPrior)) %>%
mutate(skippedResid = ifelse(OtherSkip2 == "1, 2",1,0),
skippedbyBoth = ifelse(
is.na(skipPrior) |
grepl("-8|-7|=(\\d+)", skipPrior) |
grepl("=(\\d+)", pattern),
0,
1
),
skippedbyBoth = ifelse(is.na(pattern),2,skippedbyBoth) ) %>%
mutate(Indicator2 = case_when(skippedResid==1 & skippedbyBoth==0 ~ 0,
skippedResid==1 & skippedbyBoth==1 ~ 1,
skippedResid==1 & skippedbyBoth==2 ~ 1,
skippedResid==0 & skippedbyBoth==1 ~ 1,
skippedResid==0 & skippedbyBoth==2 ~ 0,
skippedResid==0 & skippedbyBoth==0 ~ 0)  ) %>%
select(c("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponseID","pattern","OtherSkip2",
"indicatorByResIDValue","skipPrior","indicatorByResID","minus1Target",
"skippedResid","skippedbyBoth","Indicator2")) %>%
mutate(pattern = str_replace(pattern, "=\\d+$", ""),
pattern = ifelse(!is.na(skipPrior),paste0(pattern,"=",skipPrior),NA),
textResID = ifelse(!is.na(indicatorByResID),"resid=4",NA),
text = case_when(is.na(textResID) &  is.na(pattern) ~ NA,
is.na(textResID) &  !is.na(pattern) ~ pattern,
!is.na(textResID) &  is.na(pattern) ~ textResID,
!is.na(textResID) &  !is.na(pattern) ~ paste0(textResID," or ",pattern)
),
text = ifelse(is.na(text),"FileNotinSP",text)) %>%
select(-c(textResID,pattern)) %>%
ungroup() %>%
group_by(Questionnaire.ITEM) %>%
distinct() %>%
mutate(fldResponsesID = paste(fldResponseID, collapse = ",")) %>%
ungroup() %>%
select(-fldResponseID) %>%
distinct() %>%
select("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponsesID","OtherSkip2","indicatorByResIDValue","skipPrior","text") %>%
mutate(skipbyuniplicable = case_when(is.na(OtherSkip2) ~ NA,
OtherSkip2 == " " ~ 0,
!is.na(OtherSkip2) ~ 1),
skipbyResIDValue = case_when(indicatorByResIDValue=="-1"~1,
is.na(indicatorByResIDValue)~NA,
indicatorByResIDValue!="-1"~0),
skipbyResIDPattern = case_when( is.na(skipbyuniplicable) & is.na(skipPrior) ~ NA,
skipbyuniplicable==0 & !is.na(skipPrior)~0,
skipbyuniplicable==0 & is.na(skipPrior)~0,
skipbyuniplicable==1 & !is.na(skipPrior) ~0,
skipbyuniplicable==1 & is.na(skipPrior)~1)) %>%
select(-c("OtherSkip2","indicatorByResIDValue","skipPrior")) %>%
select("fldSectionID","Questionnaire.ITEM","Variable.name","fldResponsesID",
"skipbyuniplicable","skipbyResIDValue","skipbyResIDPattern","text") %>%
rename(indicatorByResID = "skipbyuniplicable",
skipbyResID = "skipbyResIDValue",
skipbyResIDPattern = "skipbyResIDPattern")
patternData
patternDataB <- patternData %>%
filter(grepl("BOX", Questionnaire.ITEM)) #%>%
patternDataB
patternDataB$if_col <- str_extract(patternDataB$`tblQuestionText-QuestionText - EN`, "(?<=If ).*?(?= =)")
patternDataB$go_col <- str_extract(patternDataB$`tblQuestionText-QuestionText - EN`, "(?<=go to ).*?(?=\\.)")
patternDataB$final_col <- str_extract(patternDataB$`tblQuestionText-QuestionText - EN`, "(?<=Otherwise, go to ).*?(?=\\.)")
box
table(data2[[patternData$name_if]], data2[[patternData$name_go]])
box
boxTable = box %>%
filter(Var1 == 2 & Freq > 0)
boxTable
